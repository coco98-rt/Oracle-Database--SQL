-- Write a query to display the member id, member name, city and membership status who are all having life time membership. 

select * from lms_members 

select member_id, member_name, city, membership_status from lms_members where membership_status = 'Permanent' 

-- Write a query to display the member id, member name who have taken the book with book code 'BL000002'.

select * from lms_book_issue
select  ls.member_id, member_name, bs.book_code
from lms_members ls left join lms_book_issue bs on (ls.member_id = bs.member_id)
where book_code = 'BL000002'

-- Write a query to display the book code, book title and author of the books whose author name begins with 'P'.

select * from lms_book_details

select book_code, book_title, author
from lms_book_details
where author like 'P%'


-- Write a query to display the total number of Java books available in library with alias column name ‘NO_OF_BOOKS’.

select count(*) As NO_OF_BOOKS
from lms_book_details
where CATEGORY = 'JAVA'
group by CATEGORY

select count(category) As NO_OF_BOOKS
from lms_book_details
where CATEGORY = 'JAVA'


-- Write a query to list the category and number of books in each category with alias name ‘NO_OF_BOOKS’.

select  category ,count(category) As NO_OF_BOOKS
from lms_book_details
group by category 




-- Write a query to list the category and number of books in each category with alias name ‘NO_OF_BOOKS’ such that the number of books are greater than 2

select category , count(*) NO_OF_BOOKS
from lms_book_details
group by category
having count(*) > 2

-- Write a query to display the number of books published by "Prentice Hall” with the alias name “NO_OF_BOOKS”.
select * from lms_book_details

select PUBLICATION,count(PUBLICATION) As NO_OF_BOOKS
from lms_book_details
where PUBLICATION = 'Prentice Hall'
group by PUBLICATION

select count(*) NO_OF_BOOKS
from lms_book_details
where publication = 'Prentice Hall';

-- Write a query to display the book code, book title of the books which are issued on the date "1st April 2012"

select * from lms_book_details
select * from lms_book_issue

select ls.book_code, ls.book_title
from lms_book_details ls  inner join lms_book_issue lb on (ls.BOOK_CODE = lb.BOOK_CODE)
where lb.DATE_ISSUE = to_date('1 April 2012', 'DD MON YYYY')

-- Write a query to display the member id, member name, date of registration and expiry date of the members whose membership expiry date is before APR 2013

select * from lms_members 


select member_id, member_name, DATE_REGISTER, DATE_EXPIRE
from lms_members
where DATE_EXPIRE < to_date('APR 2013','MON YYYY')


/* write a query to display the member id, member name, date of registration, membership status of the members 
who registered before "March 2012" and membership status is "Temporary"
*/

select * from lms_members 

select *
from lms_members
where DATE_REGISTER < to_date('March 2012','MONTH YYYY') AND MEMBERSHIP_STATUS = 'Temporary'

-- Write a query to display the member id, member name who’s City is CHENNAI or DELHI.
-- Hint:case insenstive search and display the member name in title/sentence case with alias name 'Name'

select * from lms_members 

select member_id, member_name Name
from lms_members 
where UPPER(city) = 'CHENNAI' or UPPER(city) = 'DELHI'

select member_id, member_name Name
from lms_members 
where UPPER(city) in ('CHENNAI', 'DELHI')

select * 
from lms_members 
where UPPER(city) in ('CHENNAI', 'DELHI') and lower(member_name) in ('akshay','hetvi')

-- Write a query to concatenate book title, author and display in the following format. Book_Title_is_written_by_Author 
--Example: Let Us C_is_written_by_Yashavant Kanetkar Hint: display unique books. Use “BOOK_WRITTEN_BY” as alias name.

select * from lms_book_details

select Book_Title|| '_is_' ||Author As Written_by_Author
from lms_book_details

--Write a query to display the member id, member name and total fine amount of the members whose total fine amount is less than 100.













